name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Lint backend
      run: |
        cd backend
        npm run lint
    
    - name: Run backend tests
      run: |
        cd backend
        npm run test
      env:
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USERNAME: test_user
        DATABASE_PASSWORD: test_password
        DATABASE_NAME: test_db
    
    - name: Build backend
      run: |
        cd backend
        npm run build

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Lint frontend
      run: |
        cd frontend
        npm run lint
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build

  docker:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build backend Docker image
      run: |
        cd backend
        docker build -t product-explorer-backend .
    
    - name: Build frontend Docker image
      run: |
        cd frontend
        docker build -t product-explorer-frontend .
